/*
 * File: StudentGUI.java
 * Author: Allison McDonald
 * Date: May 11, 2019
 * Purpose: CMIS 242 7983 Project 4 - a program to manage a student database, 
 * this is the GUI class - a class that defines the GUI and contains the main method
 */
package project4;

import java.util.HashMap;
import javax.swing.JOptionPane;

public class StudentGUI extends javax.swing.JFrame {

    /**
     * Creates new form StudentGUI
     */
    public StudentGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        studentIdLabel = new javax.swing.JLabel();
        studentIdField = new javax.swing.JFormattedTextField();
        studentNameLabel = new javax.swing.JLabel();
        studentNameField = new javax.swing.JFormattedTextField();
        studentMajorLabel = new javax.swing.JLabel();
        studentMajorField = new javax.swing.JFormattedTextField();
        actionLabel = new javax.swing.JLabel();
        actionComboBox = new javax.swing.JComboBox<>();
        actionButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Database");
        setResizable(false);

        studentIdLabel.setText("Student ID:");

        studentNameLabel.setText("Student Name:");

        studentMajorLabel.setText("Student Major:");

        actionLabel.setText("Choose Action:");

        actionComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insert", "Delete", "Find", "Update" }));

        actionButton.setText("Process Action");
        actionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actionButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(actionButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentIdLabel)
                            .addComponent(studentNameLabel)
                            .addComponent(studentMajorLabel)
                            .addComponent(actionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(studentIdField, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                .addComponent(studentNameField)
                                .addComponent(studentMajorField))
                            .addComponent(actionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studentIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(studentIdLabel))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(studentNameLabel)
                    .addComponent(studentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentMajorLabel)
                    .addComponent(studentMajorField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(actionLabel)
                    .addComponent(actionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(actionButton)
                .addGap(26, 26, 26))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void actionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actionButtonActionPerformed
        // Instance variables
        String studentId = studentIdField.getText().trim();
        String studentName = studentNameField.getText().trim();
        String studentMajor = studentMajorField.getText().trim();
        boolean checkId = studentDatabase.containsKey(studentId);
        int actionItem = actionComboBox.getSelectedIndex();
        
        // Determines which action was selected and performs associated steps
        if (actionItem == 0) {
            if (studentId.equals("") || studentName.equals("") || studentMajor.equals("")) {
                JOptionPane.showMessageDialog(frame, "Please enter a valid ID, Name, and Major.");
            } else if (checkId) {
                JOptionPane.showMessageDialog(frame, "The ID entered is a duplicate.");
            } else {
                studentDatabase.put(studentId, new Student(studentName, studentMajor));
                JOptionPane.showMessageDialog(frame, "The Student with ID: " + studentId + " has been inserted.");
            }
        } else {
            if (studentId.equals("") || checkId == false) {
                JOptionPane.showMessageDialog(frame, "Please enter a valid ID.");
            } else if (actionItem == 1) {
                studentDatabase.remove(studentId);
                JOptionPane.showMessageDialog(frame, "The Student with ID: " + studentId + " has been deleted.");
            } else if (actionItem == 2) {
                JOptionPane.showMessageDialog(frame, studentDatabase.get(studentId).toString());
            } else {
                Object[] grades = {"A", "B", "C", "D", "F"};
                String grade = (String)JOptionPane.showInputDialog(frame, "Choose grade:\n",
                        "Course Grade", JOptionPane.QUESTION_MESSAGE, null, grades, "A");
                Object[] credits = {"3", "4", "6"};
                String credit = (String)JOptionPane.showInputDialog(frame, "Choose credits:\n",
                        "Course Credit Hours", JOptionPane.QUESTION_MESSAGE, null, credits, 3);
                studentDatabase.get(studentId).courseCompleted(grade, Double.parseDouble(credit));
                JOptionPane.showMessageDialog(frame, "The grade for Student with ID: " + studentId + " has been updated.");
            }
        }
        studentIdField.setText("");
        studentNameField.setText("");
        studentMajorField.setText("");
    }//GEN-LAST:event_actionButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentGUI().setVisible(true);
            }
        });
    }

    // HashMap declaration
    private static HashMap<String, Student> studentDatabase = new HashMap<>();
    
    // JOptionPane declaration
    private JOptionPane frame = new JOptionPane();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actionButton;
    private javax.swing.JComboBox<String> actionComboBox;
    private javax.swing.JLabel actionLabel;
    private javax.swing.JFormattedTextField studentIdField;
    private javax.swing.JLabel studentIdLabel;
    private javax.swing.JFormattedTextField studentMajorField;
    private javax.swing.JLabel studentMajorLabel;
    private javax.swing.JFormattedTextField studentNameField;
    private javax.swing.JLabel studentNameLabel;
    // End of variables declaration//GEN-END:variables
}
