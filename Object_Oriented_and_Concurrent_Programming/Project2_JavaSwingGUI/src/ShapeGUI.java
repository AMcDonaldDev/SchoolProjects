/*
 * File: ShapeGUI.java
 * Author: Allison McDonald
 * Date: 7/10/2020
 * Purpose: Defines the GUI and contains the main method.
 */

import javax.swing.JFrame;
import javax.swing.JOptionPane;

public class ShapeGUI extends javax.swing.JFrame {

    /**
     * Creates new form ShapeGUI
     */
    public ShapeGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectLabel = new javax.swing.JLabel();
        selectComboBox = new javax.swing.JComboBox<>();
        dataPanel = new javax.swing.JPanel();
        radiusLabel = new javax.swing.JLabel();
        innerRadiusLabel = new javax.swing.JLabel();
        outerRadiusLabel = new javax.swing.JLabel();
        widthLabel = new javax.swing.JLabel();
        heightLabel = new javax.swing.JLabel();
        baseLabel = new javax.swing.JLabel();
        radiusField = new javax.swing.JFormattedTextField();
        innerRadiusField = new javax.swing.JFormattedTextField();
        outerRadiusField = new javax.swing.JFormattedTextField();
        widthField = new javax.swing.JFormattedTextField();
        heightField = new javax.swing.JFormattedTextField();
        baseField = new javax.swing.JFormattedTextField();
        displayShapeButton = new javax.swing.JButton();
        sizeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CMSC 335 Project 2: Shapes");

        selectLabel.setLabelFor(selectComboBox);
        selectLabel.setText("Select Shape:");

        selectComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Circle", "Cone", "Cube", "Cylinder", "Rectangle", "Right Triangle", "Sphere", "Square", "Torus" }));
        selectComboBox.setToolTipText("");
        selectComboBox.setMinimumSize(new java.awt.Dimension(100, 20));
        selectComboBox.setPreferredSize(new java.awt.Dimension(100, 20));
        selectComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectComboBoxItemStateChanged(evt);
            }
        });

        radiusLabel.setLabelFor(radiusField);
        radiusLabel.setText("Radius");

        innerRadiusLabel.setLabelFor(innerRadiusField);
        innerRadiusLabel.setText("Inner Radius");

        outerRadiusLabel.setLabelFor(outerRadiusField);
        outerRadiusLabel.setText("Outer Radius");

        widthLabel.setLabelFor(widthField);
        widthLabel.setText("Width");

        heightLabel.setLabelFor(heightField);
        heightLabel.setText("Height");

        baseLabel.setLabelFor(baseField);
        baseLabel.setText("Base");

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dataPanelLayout.createSequentialGroup()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radiusLabel)
                    .addComponent(innerRadiusLabel)
                    .addComponent(heightLabel)
                    .addComponent(widthLabel)
                    .addComponent(baseLabel)
                    .addComponent(outerRadiusLabel))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(outerRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(baseField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radiusField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(innerRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radiusLabel)
                    .addComponent(radiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(innerRadiusLabel)
                    .addComponent(innerRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outerRadiusLabel)
                    .addComponent(outerRadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(widthLabel)
                    .addComponent(widthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heightLabel)
                    .addComponent(heightField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(baseLabel)
                    .addComponent(baseField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayShapeButton.setText("Display Shape");
        displayShapeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayShapeButtonActionPerformed(evt);
            }
        });

        sizeLabel.setText("Enter Pixel Size:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sizeLabel)
                    .addComponent(displayShapeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(selectLabel)
                        .addGap(18, 18, 18)
                        .addComponent(selectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectLabel)
                    .addComponent(selectComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(sizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayShapeButton)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectComboBoxItemStateChanged
        // To change which fields are shown based on user selection from the drop down box
        int shapeSelection = selectComboBox.getSelectedIndex();
        switch(shapeSelection) {
            case 0:
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 1:
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 2:
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(true);
                heightField.setVisible(true);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 3:
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(true);
                widthField.setVisible(true);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 4:
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(true);
                heightField.setVisible(true);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 5:
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(true);
                widthField.setVisible(true);
                heightLabel.setVisible(true);
                heightField.setVisible(true);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 6:
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(true);
                heightField.setVisible(true);
                baseLabel.setVisible(true);
                baseField.setVisible(true);
                break;
            case 7:
                radiusLabel.setVisible(true);
                radiusField.setVisible(true);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 8:
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                innerRadiusLabel.setVisible(false);
                innerRadiusField.setVisible(false);
                outerRadiusLabel.setVisible(false);
                outerRadiusField.setVisible(false);
                widthLabel.setVisible(true);
                widthField.setVisible(true);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            case 9:
                radiusLabel.setVisible(false);
                radiusField.setVisible(false);
                innerRadiusLabel.setVisible(true);
                innerRadiusField.setVisible(true);
                outerRadiusLabel.setVisible(true);
                outerRadiusField.setVisible(true);
                widthLabel.setVisible(false);
                widthField.setVisible(false);
                heightLabel.setVisible(false);
                heightField.setVisible(false);
                baseLabel.setVisible(false);
                baseField.setVisible(false);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_selectComboBoxItemStateChanged

    private void displayShapeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayShapeButtonActionPerformed
        // Determining which shape to draw and drawing on new frame
        JFrame jFrame = new JFrame();
        jFrame.setSize(800,800);
        jFrame.setVisible(true);
        int shapeSelection = selectComboBox.getSelectedIndex();
        try {
            switch(shapeSelection) {
                case 0:
                    jFrame.setVisible(false);
                    break;
                case 1:
                    Circle circle = new Circle(Double.parseDouble(radiusField.getText()));
                    jFrame.setTitle("Circle");
                    jFrame.add(circle);
                    break;
                case 2:
                    Cone cone = new Cone(Double.parseDouble(radiusField.getText()),
                    Double.parseDouble(heightField.getText()));
                    jFrame.setTitle("Cone");
                    jFrame.add(cone);
                    break;
                case 3:
                    Cube cube = new Cube(Double.parseDouble(widthField.getText()));
                    jFrame.setTitle("Cube");
                    jFrame.add(cube);
                    break;
                case 4:
                    Cylinder cylinder = new Cylinder(Double.parseDouble(radiusField.getText()),
                    Double.parseDouble(heightField.getText()));
                    jFrame.setTitle("Cylinder");
                    jFrame.add(cylinder);
                    break;
                case 5:
                    Rectangle rectangle = new Rectangle(Double.parseDouble(widthField.getText()),
                    Double.parseDouble(heightField.getText()));
                    jFrame.setTitle("Rectangle");
                    jFrame.add(rectangle);
                    break;
                case 6:
                    RightTriangle rightTriangle = new RightTriangle(Double.parseDouble(baseField.getText()),
                    Double.parseDouble(heightField.getText()));
                    jFrame.setTitle("Right Triangle");
                    jFrame.add(rightTriangle);
                    break;
                case 7:
                    Sphere sphere = new Sphere(Double.parseDouble(radiusField.getText()));
                    jFrame.setTitle("Sphere");
                    jFrame.add(sphere);
                    break;
                case 8:
                    Square square = new Square(Double.parseDouble(widthField.getText()));
                    jFrame.setTitle("Square");
                    jFrame.add(square);
                    break;
                case 9:
                    Torus torus = new Torus(Double.parseDouble(innerRadiusField.getText()),
                    Double.parseDouble(outerRadiusField.getText()));
                    jFrame.setTitle("Torus");
                    jFrame.add(torus);
                    break;
                default:
                    break;
            }
        } catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(frame, "Invaild number entered.");
            jFrame.setVisible(false);
        }
        radiusField.setText("");
        innerRadiusField.setText("");
        outerRadiusField.setText("");
        widthField.setText("");
        heightField.setText("");
        baseField.setText("");
    }//GEN-LAST:event_displayShapeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShapeGUI().setVisible(true);
            }
        });
    }
    
    // JOptionPane declaration
    private JOptionPane frame = new JOptionPane();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField baseField;
    private javax.swing.JLabel baseLabel;
    private javax.swing.JPanel dataPanel;
    private javax.swing.JButton displayShapeButton;
    private javax.swing.JFormattedTextField heightField;
    private javax.swing.JLabel heightLabel;
    private javax.swing.JFormattedTextField innerRadiusField;
    private javax.swing.JLabel innerRadiusLabel;
    private javax.swing.JFormattedTextField outerRadiusField;
    private javax.swing.JLabel outerRadiusLabel;
    private javax.swing.JFormattedTextField radiusField;
    private javax.swing.JLabel radiusLabel;
    private javax.swing.JComboBox<String> selectComboBox;
    private javax.swing.JLabel selectLabel;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JFormattedTextField widthField;
    private javax.swing.JLabel widthLabel;
    // End of variables declaration//GEN-END:variables
}
